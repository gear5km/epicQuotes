{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/quote-input/quote-input.component.ts","./src/app/quote-input/quote-input.component.html","./src/app/quoteLibrary.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { invalid } from '@angular/compiler/src/render3/view/util';\nimport { Component } from '@angular/core';\nimport { FormsModule ,ReactiveFormsModule , FormControl, Validators } from '@angular/forms';\nimport {quoteLibrary} from './quoteLibrary';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'epicQuotes';\n\n  userID = new FormControl('',Validators.required); //For inputing a userID\n  initializeQuoteInput=false;                       //Hides the QuoteInput Componoent until startProgram() is executed\n  quoteLibraryDisplay = quoteLibrary;               //Gets existing Library array of quotes for display in the \"quoteDisplayContainer\" Element\n\n  \n  startProgram(clicked:boolean){\n      this.initializeQuoteInput=true;               //Sets \"initializeQuoteInput\" to true, Enabling the quote input component\n    }\n    \n  }\n\n","<!DOCTYPE html>\n<head>\n\n</head>\n<body>\n  <div class=\"jumbotron\" id=\"loginContainer\" >\n    <div class=\"card\" id=\"loginCard\">\n      <h6 style=\"margin-left:40%\">Welcome to</h6>\n      <h2 style=\"margin-left:30%\">Epic Quotes</h2>\n      <p style=\"margin-left:25%\">Enter a Username to begin</p>\n      <input type=\"text\" class=\"form-control\" [formControl]=\"userID\" placeholder=\"Please enter a username\" style=\"width:300px; margin-left:10%\">\n      <br>\n      <BR>\n      <button class=\"btn btn-primary\" style=\"position:relative;width:80px; margin-left:40%;top:30px\" (click)=\"startProgram(true)\" [disabled]=\"userID.invalid\">Start</button>\n      <div *ngIf=\"userID.invalid\" class=\"alert alert-danger\" style=\"height:px\" style=\"position:relative;top: 50px\">Username is required</div>\n    </div>\n    <BR>\n    <BR>\n    <BR>  \n  </div>\n  <app-quote-input [userID]='userID'*ngIf=\"initializeQuoteInput\"></app-quote-input>  \n  <div class=\"jumbotron\" id=\"quoteDisplayContainer\" *ngIf=\"userID.valid\">\n    <li id=\"displayCard\" *ngFor='let quoteLibraryDisplay of quoteLibraryDisplay'>\n      <div class=\"card\" id=\"quoteDisplayCard\">\n       <p id=\"quoteContent\">\" {{quoteLibraryDisplay.quoteContent}} \"</p>\n       <p id=\"quoteAuthour\">{{quoteLibraryDisplay.quoteAuthor}}</p>\n       <p id=\"quoteRating\">{{quoteLibraryDisplay.quoteRating}} / 10</p>\n       <button class=\"btn btn-primary\" style=\"position:relative;width:80px;bottom:10%;margin:auto\">Like</button>\n       <div class=\"card-footer\"> Submitted by \" {{quoteLibraryDisplay.quotePoster}} \"</div>\n      </div>\n      <BR>\n        <BR>\n    </li>\n  </div>\n\n\n</body>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { QuoteInputComponent } from './quote-input/quote-input.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuoteInputComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnChanges, OnInit,} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { from } from 'rxjs';\nimport {AppComponent}from '../app.component';\nimport {quoteLibrary} from '../quoteLibrary';\n\n@Component({\n  selector: 'app-quote-input',\n  templateUrl: './quote-input.component.html',\n  styleUrls: ['./quote-input.component.css']\n})\nexport class QuoteInputComponent implements OnInit {\n\n  @Input() userID;\n  userQuote=new FormControl('');          //Takes in a quote from the user\n  userAuthour=new FormControl('');        //Takes in an author from the user\n  quoteLibraryInput=quoteLibrary;         //Link the the existing array library of quotes\n\n  constructor() {\n    \n  }\n\n\n  ngOnInit() {\n    \n  }\n\n  onSubmit(){\n    quoteLibrary.push(\n      {quoteContent:this.userQuote.value,quoteAuthor:this.userAuthour.value,quoteRating:5,quotePoster:this.userID.value}\n      )\n  }\n\n}\n","<!-----<p>quote-input works!</p>--->\n<div class=\"card\" id=\"quoteInputCard\">\n    <h5 id=\"userIDTag\">{{userID.value}} is logged in</h5>\n    <input type=\"text\" class=\"form-control\" [formControl]=\"userQuote\" style=\"width:300px; margin:auto\" placeholder=\"Quotes go here\" >\n    <input type=\"text\" class=\"form-control\" [formControl]=\"userAuthour\" style=\"width:300px; margin:auto\" placeholder=\"Authors Go Here\" >\n    <p>Ratings Go here</p>\n    <button class=\"btn btn-primary\" (click)=\"onSubmit()\" style=\"width:200px; position:relative; margin:auto\">Post your Quote!</button>\n</div>\n","import { quoteModel } from './quoteModel';\r\n\r\nexport var quoteLibrary:quoteModel[] =[\r\n    {quoteContent:\"Victory belongs to the most persevering\",quoteAuthor:\"Napoleon Bonaparte\",quoteRating:5,quotePoster:\"Admin\"},\r\n    {quoteContent:\"History is written by the Victor\",quoteAuthor:\"Winston Churchill\",quoteRating:5,quotePoster:\"Admin\"},\r\n    {quoteContent:\"A single death is a tragedy, a million deaths is a statistic\",quoteAuthor:\"Joseph Stalin\",quoteRating:5,quotePoster:\"Admin\"},\r\n    {quoteContent:\"Give a man a fish, feed him for a day, teach a man to fish, feed him for a lifetime\",quoteAuthor:\"unknown\",quoteRating:5,quotePoster:\"Admin\"},\r\n]\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}