{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/quote-input/quote-input.component.ts","webpack:///src/app/quote-input/quote-input.component.html","webpack:///src/app/quoteLibrary.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","userID","required","initializeQuoteInput","quoteLibraryDisplay","clicked","startProgram","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","QuoteInputComponent","userQuote","userAuthour","quoteLibraryInput","push","quoteContent","value","quoteAuthor","quoteRating","quotePoster","onSubmit","quoteLibrary","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { invalid } from '@angular/compiler/src/render3/view/util';\nimport { Component } from '@angular/core';\nimport { FormsModule ,ReactiveFormsModule , FormControl, Validators } from '@angular/forms';\nimport {quoteLibrary} from './quoteLibrary';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'epicQuotes';\n\n  userID = new FormControl('',Validators.required); //For inputing a userID\n  initializeQuoteInput=false;                       //Hides the QuoteInput Componoent until startProgram() is executed\n  quoteLibraryDisplay = quoteLibrary;               //Gets existing Library array of quotes for display in the \"quoteDisplayContainer\" Element\n\n  \n  startProgram(clicked:boolean){\n      this.initializeQuoteInput=true;               //Sets \"initializeQuoteInput\" to true, Enabling the quote input component\n    }\n    \n  }\n\n","<!DOCTYPE html>\n<head>\n\n</head>\n<body>\n  <div class=\"jumbotron\" id=\"loginContainer\" >\n    <div class=\"card\" id=\"loginCard\">\n      <h6 style=\"margin-left:40%\">Welcome to</h6>\n      <h2 style=\"margin-left:30%\">Epic Quotes</h2>\n      <p style=\"margin-left:25%\">Enter a Username to begin</p>\n      <input type=\"text\" class=\"form-control\" [formControl]=\"userID\" placeholder=\"Please enter a username\" style=\"width:300px; margin-left:10%\">\n      <br>\n      <BR>\n      <button class=\"btn btn-primary\" style=\"position:relative;width:80px; margin-left:40%;top:30px\" (click)=\"startProgram(true)\" [disabled]=\"userID.invalid\">Start</button>\n      <div *ngIf=\"userID.invalid\" class=\"alert alert-danger\" style=\"height:px\" style=\"position:relative;top: 50px\">Username is required</div>\n    </div>\n    <BR>\n    <BR>\n    <BR>  \n  </div>\n  <app-quote-input [userID]='userID'*ngIf=\"initializeQuoteInput\"></app-quote-input>  \n  <div class=\"jumbotron\" id=\"quoteDisplayContainer\" *ngIf=\"userID.valid\">\n    <li id=\"displayCard\" *ngFor='let quoteLibraryDisplay of quoteLibraryDisplay'>\n      <div class=\"card\" id=\"quoteDisplayCard\">\n       <p id=\"quoteContent\">\" {{quoteLibraryDisplay.quoteContent}} \"</p>\n       <p id=\"quoteAuthour\">{{quoteLibraryDisplay.quoteAuthor}}</p>\n       <p id=\"quoteRating\">{{quoteLibraryDisplay.quoteRating}} / 10</p>\n       <button class=\"btn btn-primary\" style=\"position:relative;width:80px;bottom:10%;margin:auto\">Like</button>\n       <div class=\"card-footer\"> Submitted by \" {{quoteLibraryDisplay.quotePoster}} \"</div>\n      </div>\n      <BR>\n        <BR>\n    </li>\n  </div>\n\n\n</body>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { QuoteInputComponent } from './quote-input/quote-input.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuoteInputComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnChanges, OnInit,} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { from } from 'rxjs';\nimport {AppComponent}from '../app.component';\nimport {quoteLibrary} from '../quoteLibrary';\n\n@Component({\n  selector: 'app-quote-input',\n  templateUrl: './quote-input.component.html',\n  styleUrls: ['./quote-input.component.css']\n})\nexport class QuoteInputComponent implements OnInit {\n\n  @Input() userID;\n  userQuote=new FormControl('');          //Takes in a quote from the user\n  userAuthour=new FormControl('');        //Takes in an author from the user\n  quoteLibraryInput=quoteLibrary;         //Link the the existing array library of quotes\n\n  constructor() {\n    \n  }\n\n\n  ngOnInit() {\n    \n  }\n\n  onSubmit(){\n    quoteLibrary.push(\n      {quoteContent:this.userQuote.value,quoteAuthor:this.userAuthour.value,quoteRating:5,quotePoster:this.userID.value}\n      )\n  }\n\n}\n","<!-----<p>quote-input works!</p>--->\n<div class=\"card\" id=\"quoteInputCard\">\n    <h5 id=\"userIDTag\">{{userID.value}} is logged in</h5>\n    <input type=\"text\" class=\"form-control\" [formControl]=\"userQuote\" style=\"width:300px; margin:auto\" placeholder=\"Quotes go here\" >\n    <input type=\"text\" class=\"form-control\" [formControl]=\"userAuthour\" style=\"width:300px; margin:auto\" placeholder=\"Authors Go Here\" >\n    <p>Ratings Go here</p>\n    <button class=\"btn btn-primary\" (click)=\"onSubmit()\" style=\"width:200px; position:relative; margin:auto\">Post your Quote!</button>\n</div>\n","import { quoteModel } from './quoteModel';\r\n\r\nexport var quoteLibrary:quoteModel[] =[\r\n    {quoteContent:\"Victory belongs to the most persevering\",quoteAuthor:\"Napoleon Bonaparte\",quoteRating:5,quotePoster:\"Admin\"},\r\n    {quoteContent:\"History is written by the Victor\",quoteAuthor:\"Winston Churchill\",quoteRating:5,quotePoster:\"Admin\"},\r\n    {quoteContent:\"A single death is a tragedy, a million deaths is a statistic\",quoteAuthor:\"Joseph Stalin\",quoteRating:5,quotePoster:\"Admin\"},\r\n    {quoteContent:\"Give a man a fish, feed him for a day, teach a man to fish, feed him for a lifetime\",quoteAuthor:\"unknown\",quoteRating:5,quotePoster:\"Admin\"},\r\n]\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}